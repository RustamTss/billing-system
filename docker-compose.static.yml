services:
  # MongoDB база данных
  mongodb:
    image: mongo:4.4
    platform: linux/amd64
    container_name: billing_mongodb
    restart: unless-stopped
    environment:
      MONGO_INITDB_ROOT_USERNAME: admin
      MONGO_INITDB_ROOT_PASSWORD: password123
      MONGO_INITDB_DATABASE: billing_system
    ports:
      - "27017:27017"
    volumes:
      - mongodb_data:/data/db
      - ./init-mongo.js:/docker-entrypoint-initdb.d/init-mongo.js:ro
    networks:
      - billing_network

  # Backend API
  backend:
    build:
      context: ./backend
      dockerfile: Dockerfile
    platform: linux/amd64
    container_name: billing_backend
    restart: unless-stopped
    environment:
      - MONGO_URI=mongodb://admin:password123@mongodb:27017/billing_system?authSource=admin
      - DATABASE_NAME=billing_system
      - SERVER_HOST=0.0.0.0
      - SERVER_PORT=8081
      - JWT_SECRET=your-super-secret-jwt-key-change-in-production
      - APP_ENV=production
    ports:
      - "8081:8081"
    depends_on:
      - mongodb
    networks:
      - billing_network
    healthcheck:
      test: ["CMD", "wget", "--no-verbose", "--tries=1", "--spider", "http://localhost:8081/health"]
      interval: 30s
      timeout: 10s
      retries: 3

  # Static Frontend
  frontend:
    build:
      context: ./frontend
      dockerfile: Dockerfile.static
    platform: linux/amd64
    container_name: billing_frontend
    restart: unless-stopped
    ports:
      - "80:80"
    depends_on:
      - backend
    networks:
      - billing_network
    healthcheck:
      test: ["CMD", "wget", "--no-verbose", "--tries=1", "--spider", "http://localhost:80"]
      interval: 30s
      timeout: 10s
      retries: 3

volumes:
  mongodb_data:
    driver: local

networks:
  billing_network:
    driver: bridge 